<!-- <script src="//maps.google.com/maps/api/js?key=AIzaSyA3cA9nAVS99FveFXYeZJk2OjS4EDwJPpc&v=3.26&libraries=geometry" type="text/javascript"></script> -->
<script src="//maps.google.com/maps/api/js?key=AIzaSyA3cA9nAVS99FveFXYeZJk2OjS4EDwJPpc&libraries=places"></script>
<script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>
<script src='//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js' type='text/javascript'></script> 
<!-- only if you need custom infoboxes -->



<div style='width: 800px;'>
  <div id="map" style='width: 1160px; height: 400px;'></div>
</div>

<h1>Listing users</h1>

<table>
  <thead>
    <tr>
      <th>Latitude</th>
      <th>Longitude</th>
      <th>Address</th>
      <th>Description</th>
      <th>Title</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>

  <tbody>
  <button onclick="myFunction()">Find Nearby</button>
  <%= link_to 'New User', new_user_path %>

    <% @users.each do |user| %>
      <tr>
        <td><%= user.latitude %></td>
        <td><%= user.longitude %></td>
        <td><%= user.address %></td>
        <td><%= user.description %></td>
        <td><%= user.title %></td>
        <td><%= link_to 'Show', user %></td>
        <td><%= link_to 'Edit', edit_user_path(user) %></td>
        <td><%= link_to 'Destroy', user, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>


<script type="text/javascript">
    handler = Gmaps.build('Google');
    handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
        markers = handler.addMarkers(<%=raw @hash.to_json %>);
        handler.bounds.extendWith(markers);
        handler.fitMapToBounds();
        
    });


    window.onload = function() {

}

// Check to see if the browser supports the GeoLocation API.
if (navigator.geolocation) {

} else {
  // Print out a message to the user.
  document.write('Your browser does not support GeoLocation');
}

// Get the location
navigator.geolocation.getCurrentPosition(function(position) {

});
function myFunction() {
           alert(navigator.geolocation.getCurrentPosition());
          }
        

 
      
        var citymap = {
         kathmandu: {
          center: {lat: 27.71, lng: 85.32},
          population: 274
         
         }
        };
        
         for (var city in citymap) {
          // Add the circle for this city to the map.
          var cityCircle = new google.maps.Circle({
            strokeColor: '#808080',
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: '#000000',
            fillOpacity: 0.35,
                              geodesic: true, 
                              draggable: true, 
                              clickable: true, 
                              editable: true, 
                              visible: true,
                               map: map,
            center: citymap[city].center,
            radius: Math.sqrt(citymap[city].population) * 100
          });
        }
      
        
          


       




//     handler = Gmaps.build('Google');
// handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
//   markers = handler.addMarkers([
//     {
//       "lat": 0,
//       "lng": 0,
//       "picture": {
//         "url": "http://people.mozilla.com/~faaborg/files/shiretoko/firefoxIcon/firefox-32.png",
//         "width":  32,
//         "height": 32
//       },
//       "infowindow": "hello!"
//     }
//   ]);
//   handler.bounds.extendWith(markers);
//   handler.fitMapToBounds();
// });

// handler = Gmaps.build('Google');
// handler.buildMap({
//     provider: {
//       disableDefaultUI: true
//       // pass in other Google Maps API options here
//     },
//     internal: {
//       id: 'map'
//     }
//   },
//   function(){
//     markers = handler.addMarkers([
//       {
//         "lat": 0,
//         "lng": 0,
//           "width":  32,
//           "height": 32
//         },
//         "infowindow": "hello!"
//       }
//     ]);
//     handler.bounds.extendWith(markers);
//     handler.fitMapToBounds();
//   }
// );

</script>



  


